---
import { ChevronDoubleRightIcon } from '@heroicons/react/24/outline'

interface Props {
	open?: 'true' | 'false'
}

const { open = 'true' } = Astro.props
---

<aside
	id="container_sidebar"
	class="@container group relative w-full max-w-12 shrink-0 transition-all duration-500 aria-expanded:max-w-sm aria-expanded:max-md:max-w-12 aria-expanded:md:max-w-xs"
	aria-expanded={open}
>
	<nav
		id="menu_sidebar"
		class="bg-foreground border-border z-10 flex h-full w-full shrink-0 flex-col items-center gap-5 border-r px-2 pt-4 transition-all duration-500 group-aria-[expanded='false']:max-w-12 group-aria-[expanded='true']:px-6 group-aria-[expanded='true']:max-md:max-w-52 md:w-full group-aria-[expanded='true']:md:max-w-xs"
		aria-label="NavegaciÃ³n del perfil"
		role="menu"
	>
		<slot />
		<button
			id="toggle_sidebar"
			class="border-border absolute bottom-0 z-20 inline-flex w-full min-w-0 max-w-12 shrink-0 cursor-pointer items-center justify-center border-t p-2 text-center transition-all duration-500 group-aria-[expanded='true']:max-w-xs group-aria-[expanded='true']:max-md:max-w-52"
			aria-controls="menu_sidebar"
			aria-expanded="true"
		>
			<span class="w-full text-center group-aria-[expanded='false']:hidden">Ocultar</span>
			<ChevronDoubleRightIcon
				className="float-end size-8 group-aria-[expanded='true']:rotate-180"
			/>
		</button>
	</nav>
</aside>

<script>
	import { $ } from '@/lib/dom-selector.ts'
	import { detectMobile } from '@/lib/utils/is_mobile.ts'

	const handleSidebarToggle = () => {
		const $containerSidebar = $<HTMLElement>('#container_sidebar')
		const $toggleButton = $<HTMLButtonElement>('#toggle_sidebar')
		if (!$toggleButton || !$containerSidebar) return

		$toggleButton.addEventListener('click', () => {
			const isExpanded = $containerSidebar.ariaExpanded === 'true'
			const newIsExpanded = String(!isExpanded)

			$containerSidebar.ariaExpanded = newIsExpanded
			$toggleButton.ariaExpanded = newIsExpanded
		})
	}

	const handleResize = () => window.addEventListener('resize', setupMobileSidebar)

	const setupMobileSidebar = () => {
		const isMobile = detectMobile()
		const $containerSidebar = $<HTMLElement>('#container_sidebar')
		if (!$containerSidebar) {
			console.error('Not found DOMElement')
			return
		}

		if (isMobile) {
			$containerSidebar.ariaExpanded = 'false'
		}
	}

	const setupSidebar = () => {
		setupEventsListeners()
		setupMobileSidebar()
	}

	const setupEventsListeners = () => {
		handleSidebarToggle()
		handleResize()
	}

	document.addEventListener('astro:page-load', setupSidebar)
</script>
