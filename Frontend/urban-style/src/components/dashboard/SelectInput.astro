---
import type { FieldProperties } from "@/interface/form-mediator.interface";
import LabelInput from "./LabelInput.astro";
import "@/styles/select.css";

interface Props extends FieldProperties {}

const { name, label, placeholder, options, isMultiple } = Astro.props;
---

<LabelInput label={label as string}>
  <select
    class="w-full border-border rounded"
    multiple={isMultiple}
    name={name}
    data-name={name}
    data-is-multiple={isMultiple}
    data-placeholder={placeholder}
  >
    {
      options?.map((option) => (
        <option value={option.value}>{option.text}</option>
      ))
    }
  </select>

  <script>
    import { $, $$ } from "@/lib/dom-selector";
    import SlimSelect from "slim-select";

    $$("select")?.forEach((select) => {
      const { name, placeholder, isMultiple } = select.dataset;
      const $selectElement = $(`select[name="${name}"]`) as Element;
      console.log(placeholder);
      new SlimSelect({
        select: $selectElement,
        settings: {
          placeholderText: placeholder,
          closeOnSelect: false,
          allowDeselect: isMultiple ? true : false,
          contentPosition: "fixed",
          contentLocation: $("body"),
          showOptionTooltips: true,
        },
      });
    });
  </script>
</LabelInput>
