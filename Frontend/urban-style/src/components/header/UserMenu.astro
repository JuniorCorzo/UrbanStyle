---
import type { User } from '@/interface/user.interface'

interface Props {
	user: User
}

const { user } = Astro.props
const { name: userName, role } = user
---

<div
	id="user_container"
	class="max-md:bg-background border-border w-full rounded-md max-md:w-full max-md:border max-md:px-2 max-md:py-1 md:text-right"
>
	<span id="user_name" class="cursor-pointer">{userName}</span>
	<div
		id="user_menu"
		class="md:bg-accent/85 backdrop-blur-xs invisible -right-5 top-full hidden max-h-0 gap-2 overflow-hidden rounded-bl rounded-br py-2 text-left transition-[max-height,opacity] duration-[400ms] md:absolute md:block md:w-52 md:gap-4 md:px-3 md:py-4"
	>
		<ul class="flex w-full flex-col md:gap-6">
			<li>
				<a href="#">Perfil</a>
			</li>
			<li>
				<a href="/orders">Mis pedidos</a>
			</li>
			{
				role === 'ROLE_ADMIN' && (
					<li>
						<a href="/dashboard?mediator=products">Dashboard</a>
					</li>
				)
			}
			<li>
				<button id="logout" class="cursor-pointer">Cerrar sesi√≥n</button>
			</li>
		</ul>
	</div>
</div>

<style>
	li {
		@apply not-last:border-b-2 w-full cursor-pointer border-transparent px-[12px] py-[7px];
		&:hover {
			border-color: var(--color-border);
			transition: border-color 300ms;
		}
	}
</style>

<script>
	import { $, $$ } from '@/lib/dom-selector'
	import { logout } from '@/service/auth.service'
	import { navigate } from 'astro:transitions/client'

	document.addEventListener('astro:page-load', () => {
		$$('nav ul li a').forEach(($aElement) => {
			$aElement?.parentElement?.addEventListener('click', () => {
				navigate(($aElement as HTMLAnchorElement).href)
			})
		})

		$('#user_container')?.addEventListener('click', (event) => {
			event.stopPropagation()
			const $userMenu = (event.currentTarget as HTMLDivElement).querySelector('#user_menu')
			if ($userMenu) {
				$userMenu.classList.toggle('hidden')
				$userMenu.classList.toggle('invisible')
				$userMenu.classList.toggle('max-h-0')
				$userMenu.classList.toggle('max-h-96')
			}
		})

		$('#logout')?.parentElement?.addEventListener('click', () => {
			logout().then(() => location.replace('/home'))
		})
	})
</script>
