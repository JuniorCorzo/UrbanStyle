---
import OrderItem from '@/components/orders/OrderItem.astro'
import Pagination from '@/components/pagination/Pagination.astro'
import Subtitle from '@/components/text/Subtitle.astro'
import type { Page } from '@/interface/response.interface'
import { OrderService } from '@/service/orders.service'

const { user, accessToken } = Astro.locals
console.log(accessToken)
const page = Number(Astro.url.searchParams.get('page')) > 0 ? -1 : 1

const response = await OrderService.getOrderByUserId(user.id, accessToken, page)
if (!response.success) console.error(response.error, 'ERror')

const orders = response.success ? response.data : { content: [], page: 0 }
---

<section id="order_section" class="@container mt-5 flex h-full w-full flex-col gap-5 px-6">
	<Subtitle size="3xl" Text="Mis pedidos" />
	{orders.content.map((order) => <OrderItem order={order} />)}
	{typeof orders === 'object' && <Pagination page={orders.page as Page} />}
</section>

<script>
	import { $ } from '@/lib/dom-selector'
	import { OrderService } from '@/service/orders.service'

	const cancelOrder = (target: HTMLButtonElement) => {
		if (!target.classList.contains('cancel-button')) return

		const orderId = target.dataset.orderId
		if (!orderId) return

		target.ariaBusy = 'true'
		OrderService.cancelOrder(orderId)
			.then(() => {
				window.location.reload()
			})
			.catch((error) => {
				console.error('Error canceling order:', error)
			})
			.finally(() => {
				target.ariaBusy = 'false'
			})
	}

	const toggleDetails = (target: HTMLButtonElement) => {
		if (target.classList.contains('details-button')) {
			const { orderId } = target.dataset
			if (!orderId) return

			const $orderHistoryDiv = $<HTMLDivElement>(`#order-details-${orderId}`)
			$orderHistoryDiv?.classList.toggle('hidden')
			$orderHistoryDiv?.classList.toggle('flex')

			// Toggle the aria-expanded attribute and update button text
			const ariaExpanded = target.getAttribute('aria-expanded') === 'true'
			target.ariaExpanded = ariaExpanded ? 'true' : 'false'
			target.textContent = target.ariaExpanded ? 'Mostrar menos' : 'Mostrar más'
			target.title = ariaExpanded
				? 'Mostrar menos detalles del pedido'
				: 'Mostrar más detalles del pedido'

			target.setAttribute('aria-label', target.textContent)
		}
	}

	const initializeListeners = () => {
		const $orderSection = $<HTMLElement>('#order_section')
		if (!$orderSection) return

		$orderSection.addEventListener('click', (event) => {
			const target = event.target
			if (target instanceof HTMLButtonElement) {
				cancelOrder(target)
				toggleDetails(target)
			}
		})
	}
	document.addEventListener('astro:page-load', initializeListeners)
</script>
